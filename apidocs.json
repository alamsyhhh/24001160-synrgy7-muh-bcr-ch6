{
  "openapi": "3.0.0",
  "info": {
    "title": "Binar Car Rent Api",
    "version": "1.0.0",
    "description": "This is a simple CRUD API application made with Express and documented with Swagger",
    "x-logo": {
      "url": "https://example.com/logo.png",
      "altText": "My API Logo"
    }
  },
  "servers": [
    {
      "url": "http://localhost:9000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication related operations"
    },
    {
      "name": "User",
      "description": "Operations related to user management"
    },
    {
      "name": "Cars",
      "description": "Operations related to cars management"
    }
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in user",
        "description": "Log in user with provided credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "description": "The credentials required for logging in",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user",
        "description": "Register a new user with the provided credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered user"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Get all users",
        "responses": {
          "200": {
            "description": "Successfully retrieved users"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/users/{userId}/role": {
      "put": {
        "tags": ["User"],
        "summary": "Update user role",
        "description": "Update the role of a user with the provided userId",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to update role"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user role"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/current-user": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "description": "Get current logged-in user details",
        "responses": {
          "200": {
            "description": "Successfully retrieved current user"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/cars": {
      "get": {
        "tags": ["Cars"],
        "summary": "Get all cars",
        "description": "Retrieve a list of all cars",
        "responses": {
          "200": {
            "description": "Successfully retrieved cars"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Cars"],
        "summary": "Create a new car",
        "description": "Create a new car with provided details",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created car"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "summary": "Get car by ID",
        "description": "Retrieve details of a car by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the car to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved car details"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Cars"],
        "summary": "Update car",
        "description": "Update the details of a car",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the car to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated car"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Cars"],
        "summary": "Delete car",
        "description": "Delete a car by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the car to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted car"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  }
}
